[{"configDocKey":{"type":"string","key":"quarkus.class-loading.parent-first-artifacts","configDoc":"Artifacts that are loaded in a parent first manner. This can be used to work around issues where a given class needs to be loaded by the system ClassLoader. Note that if you make a library parent first all its dependencies should generally also be parent first. \n Artifacts should be configured as a comma separated list of artifact ids, with the group, artifact-id and optional classifier separated by a colon. \n WARNING: This config property can only be set in application.properties","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"parent-first-artifacts","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.class-loading"}},{"configDocKey":{"type":"string","key":"quarkus.class-loading.reloadable-artifacts","configDoc":"Artifacts that are loaded in the runtime ClassLoader in dev mode, so they will be dropped and recreated on change. \n This is an advanced option, it should only be used if you have a problem with libraries holding stale state between reloads. Note that if you use this any library that depends on the listed libraries will also need to be reloadable. \n This setting has no impact on production builds. \n Artifacts should be configured as a comma separated list of artifact ids, with the group, artifact-id and optional classifier separated by a colon. \n WARNING: This config property can only be set in application.properties","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"reloadable-artifacts","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.class-loading"}}]